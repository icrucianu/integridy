#[main]
#Define Filters
#hasRoleFilter = ro.siveco.cad.integridy.auth.AuthFilter
#authc.loginUrl = /faces/login.xhtml
#authc.successUrl = /faces/mainPage.xhtml
#authc.usernameParam = authForm:username
#authc.passwordParam = authForm:password
#ssl.enabled = false

[main]
#Define Filters
hasRoleFilter = ro.siveco.cad.integridy.auth.AuthFilter
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
authc.loginUrl = /faces/login.xhtml
authc.successUrl = /faces/index.xhtml
ssl.enabled = false



# DataSource Setup
datasource = org.apache.shiro.jndi.JndiObjectFactory

#For glassfish
#datasource.resourceName = java:app/integridy

#For wildFly
#datasource.resourceName = java:/integridy
#datasource.resourceRef = true

#For tomee
datasource.resourceName = openejb:Resource/integridy


#JDBC realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT role from  users  WHERE  username = ?
jdbcRealm.permissionsLookupEnabled = false
jdbcRealm.dataSource = $datasource
securityManager.realms = $jdbcRealm


# Filter Setup
[urls]
# Permitted - resources & webresources
/faces/javax.faces.resource/** = anon
/webresources/** = anon
/resources/images/**=anon


# Permitted - login & changePassword & register
/faces/change-password.xhtml = anon
/faces/accountConfirmation.xhtml = anon
/faces/register.xhtml = anon
/faces/forgot-password.xhtml=anon
/faces/login.xhtml = authc
/faces/logout = logout

# Permitted - error pages
/faces/error/* = anon

# Restricted areas
/faces/users/* = hasRoleFilter[admin,dso]

# Restricted - nomenclatures
/faces/activities/* = hasRoleFilter[admin,dso]
/faces/index.xhtml = hasRoleFilter[admin,consumer,dso]
/index.xhtml = hasRoleFilter[admin , consumer,dso]
/faces/users/* = hasRoleFilter[admin,dso]
/faces/demand_response/=hasRoleFilter[admin,consumer,dso]

# Other areas permitted (if authenticated)
/** = authc